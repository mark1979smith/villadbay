{% extends 'admin.html.twig' %}
{% form_theme form 'bootstrap_4_layout.html.twig' %}


{% block body %}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="display-3">Manage a page</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-3">
                <ul class="nav flex-column nav-pills" id="subnav">
                    <li class="nav-item" id="subnav--core">
                        <a class="nav-link active" href="#">Core Options</a>
                    </li>
                    <li class="nav-item dropdown" id="subnav--opts">
                        <a class="nav-link disabled dropdown-toggle" data-toggle="dropdown" role="button"
                           aria-haspopup="true" aria-expanded="false" href="#">Content Options</a>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" href="#"
                               data-target="#text_heading_type_container">Add Header</a>
                            <a class="dropdown-item" href="#"
                               data-target="#text_leading_container">Add Leading Paragraph</a>
                            <a class="dropdown-item" href="#"
                               data-target="#paragraph_text_container">Add Paragraph</a>
                            <a class="dropdown-item" href="#"
                               data-target="#list_group_container">Add List</a>

                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="#" data-target="#panoramic_image_container">Add Panoramic
                                Image</a>
                            <a class="dropdown-item" href="#" data-target="#background_image_container">Add Background
                                Image</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="#" data-target="#form_container">Add Form</a>
                            <a class="dropdown-item" href="#" data-target="#image_carousel_container">Add Carousel</a>

                        </div>
                    </li>
                    <li class="nav-item" id="subnav--prev">
                        <a class="nav-link disabled" href="#">Preview</a>
                    </li>
                </ul>
            </div>
            <div class="col-9">
                <div class="jumbotron">

                    {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}
                    {{ form_errors(form) }}
                    <div id="form-core-options">
                        {{ form_row(form.page_route) }}
                        <div class="form-group">
                            {{ form_label(form.page_type) }}
                            {{ form_widget(form.page_type) }}
                            {{ form_errors(form.page_type) }}
                            <small id="page_type_helper" class="form-text text-muted">
                                Landing Page: Large background image with required form only<br>
                                Content Page: Optional Panoramic image with a wide range of content options
                            </small>
                        </div>
                    </div>
                    {{ form_widget(form.display_order) }}
                    <div id="form-opt-options">
                        {%- for key, field in form.display_order -%}
                            {% set el = key|split('--') %}
                            {% set counter = field.vars.value %}
                            {% if el|length == 2 %}
                                {% if el[0] starts with 'text_heading_' %}
                                    {# This is a special group of elements #}
                                    {% if (el[0] == 'text_heading_type') %}
                                        {% embed "admin/form-widgets/text_heading.html.twig" with {'index': counter, 'counter' : el[1]} %}{% endembed %}
                                    {% endif %}
                                {% else %}
                                    {% embed "admin/form-widgets/#{el[0]}.html.twig" with {'index': counter, 'counter' : el[1]} %}{% endembed %}
                                {% endif %}
                            {% endif %}
                        {%- endfor -%}
                    </div>
                    {{ form_row(form.submit) }}
                    {{ form_widget(form.page_stage) }}
                    {{ form_widget(form._token) }}
                    {# render_rest is set to false as we do not want to submit all non-needed fields #}
                    {{ form_end(form, {'render_rest': false}) }}

                    {# The following are placeholders when adding elements are added dynamically #}
                    {%- block TextHeadingType_widget -%}
                        <div style="display:none;" id="text_heading_type_container" data-page-type="landing|content" data-counter="{{ current_index }}"
                             data-element-wrapper="{{ '<div class="col-lg-4 col-md-6 col-sm-12"></div>'|e }}"
                             data-template="{{ '<div class="text_heading_type" data-counter="#NEWCOUNTER#"><div class="form-row">#FORMELEMENTS#</div></div>'|e }}">
                            <div class="form-row">
                                {{ form_widget(template.text_heading_type) }}
                                {{ form_widget(template.text_heading_size_class) }}
                                {{ form_widget(template.text_heading_colour_class) }}
                                {{ form_widget(template.text_heading_align_class) }}
                                {{ form_widget(template.text_heading_text_value) }}
                            </div>
                        </div>
                    {%- endblock -%}
                    {%- block TextLeading_widget -%}
                        <div style="display: none" id="text_leading_container" data-page-type="landing|content" data-counter="{{ current_index }}"
                             data-template="{{ '<div class="text_leading" data-counter="#NEWCOUNTER#">#FORMELEMENTS#</div>'|e }}">
                            {{ form_widget(template.text_leading) }}
                        </div>
                    {%- endblock -%}
                    {%- block ParagraphText_widget -%}
                        <div style="display: none" id="paragraph_text_container" data-page-type="landing|content" data-counter="{{ current_index }}"
                             data-template="{{ '<div class="paragraph_text" data-counter="#NEWCOUNTER#">#FORMELEMENTS#</div>'|e }}">
                            {{ form_widget(template.paragraph_text) }}
                        </div>
                    {%- endblock -%}
                    {%- block ListGroup_widget -%}
                        <div style="display: none" id="list_group_container" data-page-type="content" data-counter="{{ current_index }}"
                             data-template="{{ '<div class="list_group" data-counter="#NEWCOUNTER#">#FORMELEMENTS#<small id="list_group_helper" class="form-text text-muted">Separate items with a comma (,). Wrap items in double-quotes (&quot;) if you require an items to include a comma.</small></div>'|e }}">
                            {{ form_widget(template.list_group) }}
                            <small id="list_group_helper" class="form-text text-muted">
                                Separate items with a comma (,). Wrap items in double-quotes (&quot;) if you require an
                                items to include a comma.
                            </small>
                        </div>
                    {%- endblock -%}
                    {%- block PanoramicImage_widget -%}
                        <div style="display: none" id="panoramic_image_container" data-page-type="content" data-limit="1" data-counter="{{ current_index }}"
                             data-template="{{ '<div class="panoramic_image" data-counter="#NEWCOUNTER#">#FORMELEMENTS#<small id="panoramic_image_helper" class="form-text text-muted">Best placed at the top of the page before any content.</small></div>'|e }}">
                            {{ form_label(template.panoramic_image) }}
                            {{ form_widget(template.panoramic_image) }}
                            <small id="panoramic_image_helper" class="form-text text-muted">
                                Best placed at the top of the page before any content.
                            </small>

                        </div>
                    {%- endblock -%}
                    {%- block BackgroundImage_widget -%}
                        <div style="display: none" id="background_image_container" data-page-type="landing" data-limit="1" data-counter="{{ current_index }}"
                             data-template="{{ '<div class="background_image" data-counter="#NEWCOUNTER#">#FORMELEMENTS#</div>'|e }}">
                            {{ form_label(template.background_image) }}
                            {{ form_widget(template.background_image) }}
                        </div>
                    {%- endblock -%}
                    {%- block Form_widget -%}
                        <div style="display: none" id="form_container" data-page-type="landing|content" data-counter="{{ current_index }}"
                             data-template="{{ '<div class="form" data-counter="#NEWCOUNTER#">#FORMELEMENTS#</div>'|e }}">
                            {{ form_label(template.form) }}
                            {{ form_widget(template.form) }}
                        </div>
                    {%- endblock -%}
                    {%- block CarouselImage_widget -%}
                        <div style="display: none" id="image_carousel_container" data-page-type="content" data-counter="{{ current_index }}"
                             data-template="{{ '<div class="form" data-counter="#NEWCOUNTER#">#FORMELEMENTS#</div>'|e }}">
                            {{ form_label(template.image_carousel) }}
                            {{ form_widget(template.image_carousel) }}
                        </div>
                    {%- endblock -%}
                </div>
            </div>
        </div>
    </div>

    <div id="modal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">This page is Unpublished</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>This version has possible changes which have not yet been published.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div id="modalLimitExceeded" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Limit Exceeded</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>A limit has been placed on that option. You are unable exceed this limit.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div id="modalPageTypeConflict" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Element Not Available</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>The Element that you've requested is not available for the Page Type selected.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    {% if (dev_mode == 'true') %}
        <div class="container">
            <div class="row">
                <div id="qunit"></div>
                <div id="qunit-fixture"></div>
            </div>
        </div>

    {% endif %}
{% endblock %}

{% if (dev_mode == 'true') %}
    {% block stylesheets %}
        <link rel="stylesheet" href="https://code.jquery.com/qunit/qunit-2.5.0.css">
    {% endblock %}
{% endif %}

{%- block javascripts -%}
    <script type="text/javascript" src="{{ asset('/js/admin--pages.js') }}"></script>
    {% if (dev_mode == 'true') %}
        <script src="https://code.jquery.com/qunit/qunit-2.5.0.js"></script>
        <script type="text/javascript" src="{{ asset('/js/admin--pages-test.js') }}"></script>
    {% endif %}
    <script type="text/javascript">
        $(document).ready(function () {
            if ($('#page_page_route').val() && !$('#page_page_route').hasClass('is-invalid')
                && $('#page_page_type').val() && !$('#page_page_type').hasClass('is-invalid')) {
                getPageData($('#page_page_route').val());
                lockPage();
            }

            $('#page_submit').on('click', function (e) {
                e.preventDefault();

                var ele = $(this);

                $(ele).closest('form').find('*:disabled').removeAttr('disabled');
                $(ele).closest('form').submit();
            });

            $('#page_page_route').on('change', function(e) {
                var s = $(this).val();
                getPageData(s);
            });

            $('#subnav--opts').on('click', '.dropdown-item', function (e) {
                e.preventDefault();

                var ele = $(this);

                var targetLimit = $(jQuery(this).data('target')).data('limit');
                var existingCount = $('#form-opt-options').find(jQuery(this).data('target').replace('#', '.').replace('_container', '')).length;
                var targetPageType = $(jQuery(this).data('target')).data('page-type');
                if ((typeof targetLimit === 'undefined') || (typeof targetLimit !== 'undefined' && targetLimit > existingCount)) {
                    if (targetPageType.indexOf($('#page_page_type').val()) > -1) {
                        addElementToForm(jQuery(this).data('target'), $(jQuery(this).data('target')).data('counter'));
                    } else {
                        $('#modalPageTypeConflict').modal();
                    }
                } else {
                    $('#modalLimitExceeded').modal();
                }

            });

            $('.panoramic_image .card-deck .card .btn,.background_image .card-deck .card .btn').on('click', function (e) {
                applyCardClick($(this));
            });

            applyPanoSelected();
            applyBackgroundImageSelected();
        });

        $('#form-opt-options>div').each(function () {
            var target = $('#page_' + jQuery(this).attr('class'));

            if (target.data('form-element-prefix-markup')) {
                if (typeof target.data('form-element-prefix-markup-append-to') !== 'undefined') {
                    appendHtmlTo($(this), $(target).data('form-element-prefix-markup'), $(target).data('form-element-prefix-markup-append-to'));
                }
            }

            if (typeof target.data('form-element-hide') !== 'undefined') {
                hideElement($(this), target.data('form-element-hide'));
            }
        });

        /**
         * Delete Block Opt
         */
        $('#form-opt-options').on('click', '.js-nav-link--delete', function (e) {
            e.preventDefault();
            var displayOrder = $(this).closest('div[data-counter]').data('counter');

            $(':input[id^="page_display_order_"][id$="--' + displayOrder + '"]').remove();
            $(this).closest('div[data-counter]').remove();
        });

        /**
         * Lock Core options and allow the adition of options
         */
        function lockPage() {
            $('#page_page_route').attr('disabled', true);
            $('#page_page_type').attr('disabled', true);

            $('#form-core-options').find('input,select').attr('disabled', true);
            $('#subnav--core>a').removeClass('active').addClass('disabled');
            $('#subnav--opts>a').removeClass('disabled').addClass('active');

            $('#page_page_stage').val('options');

        }

        /**
         * Add Element To Form
         * @param t Jquery selector for template
         * @returns {*}
         */
        function addElementToForm(t, counter) {
            var fields = jQuery(t);
            if (fields.length > 0) {

                var newWidget = fields.find('*[data-prototype]');
                var htmlStr = '';

                $.each(newWidget, function (a, b) {
                    htmlStr += getElementHtml(fields, b, counter);
                });
                var newElem = jQuery(fields.data('template').replace('#FORMELEMENTS#', htmlStr).replace('#NEWCOUNTER#', counter));
                $('#form-opt-options').append(newElem.css('display', 'block'));
                $.each(newWidget, function (a, b) {
                    $('#form-opt-options').before(jQuery('#page_display_order').data('prototype').toString().replace(/__name__/g, $(b).prop('id').replace(/^page_/, '') + '--' + counter).replace('#NEWCOUNTER#', $('#form-opt-options>div').length));
                });

                $(newElem).prepend('<ul class="nav justify-content-end clearfix">' +
                    '<li class="nav-item"><a href="#" class="nav-link js-nav-link--delete"><span class="oi oi-trash"></span></a></li>' +
                    '</ul>');


                counter++;
                $('div.jumbotron>div[data-counter]').data('counter', counter);


                $('.panoramic_image .card-deck .card .btn,.background_image .card-deck .card .btn').on('click', function (e) {
                    applyCardClick($(this));
                });

                applyPanoSelected();
                applyBackgroundImageSelected();

                return newElem;

            } else {
                console.log('** No Matching Element **')
            }
        }


        function getElementHtml(fields, b, counter) {
            var h = $('<body>');
            if ($(b).data('form-element-prefix-markup')) {
                if (typeof $(b).data('form-element-prefix-markup-append-to') === 'undefined') {
                    appendHtml(h, $(b).data('form-element-prefix-markup'));
                }
            }
            if (fields.data('element-wrapper')) {
                $(h).append(
                    $(fields.data('element-wrapper')).append(
                        $(b).data('prototype').toString().replace(/__name__/g, counter)
                    )
                ).html();
                hideElement(h, $(b).data('form-element-hide'));
            } else {
                $(h).append(
                    $(b).data('prototype').toString().replace(/__name__/g, counter)
                ).html();

                hideElement(h, $(b).data('form-element-hide'));
            }
            if ($(b).data('form-element-prefix-markup')) {
                if (typeof $(b).data('form-element-prefix-markup-append-to') !== 'undefined') {
                    appendHtmlTo(h, $(b).data('form-element-prefix-markup'), $(b).data('form-element-prefix-markup-append-to'))
                }
            }

            return $(h).html();
        }

        function applyCardClick(ele) {
            $(ele).closest('.card-deck').find(':radio').removeAttr('checked');
            $(ele).closest('.card-deck').find('label').removeClass('active');
            $(ele).closest('.card-deck').find('.card').removeClass('border-success');
            $(ele).closest('.card').find(':radio').attr('checked', 'checked');
            $(ele).closest('.card').find(':radio[checked="checked"]').closest('label').addClass('active');
            $(ele).closest('.card').addClass('border-success');
            if ($(ele).closest('.card').find(':radio:checked').length) {
                $(ele).closest('.form-group').find('select').val($(ele).closest('.card').find(':radio:checked').val());
            }
        }

        function applyBackgroundImageSelected() {
            $('.background_image :input[id^="page_background_image"]').each(function (e) {
                $(this).closest('.background_image').find(':radio[value="' + $(this).val() + '"]').trigger('click');
            });
        }

        function applyPanoSelected() {
            $('.panoramic_image :input[id^="page_panoramic_image"]').each(function (e) {
                $(this).closest('.panoramic_image').find(':radio[value="' + $(this).val() + '"]').trigger('click');
            });

        }

        function getPageData(s) {
            var route = "{{ path('admin-page-data')|escape('js') }}";
            $.post(route + '/' + s, {}, function(d) {
                $('#page_page_type').val(d.page_type);

                if (d.page_preview) {
                    $('#modal').modal();
                    var f = $('<div><div class="d-flex justify-content-end">{{ form_start(delete_revision_form, {'attr': {'action': path('admin-delete-revision')}}) }}{{  form_widget(delete_revision_form) }}{{ form_end(delete_revision_form) }}</div></div>');
                    f.find('#delete_page_revision_slug').val(s);
                    prependHtml($('div.jumbotron'), f);

                }
                lockPage();

                $.each(d.display_order, function (field, value) {
                    var fieldSplit = field.split("--")
                    var f = fieldSplit[0];
                    var c = fieldSplit[1];
                    if (c > 0) {
                        addElementToForm('#' + f + '_container', c);
                        if (typeof d[f] !== 'undefined' && d[f].hasOwnProperty(c) && typeof d[f][c] === 'string') {
                            $('#page_' + f + '_' + c).val(d[f][c]);
                        } else {
                            if (typeof d[f] !== 'undefined' && d[f].hasOwnProperty(c) && $.isArray(d[f][c])) {
                                $('#page_' + f + '_' + c).val(d[f][c].join(','));
                            } else {
                                $.each(d[f], function (a, b) {
                                    ele = $('#page_' + a + '_' + value);
                                    if (ele.length) {
                                        ele.val(b[c]);
                                    }
                                });
                            }
                        }
                    }
                });

            }, 'json');
        }
    </script>
{%- endblock -%}
