# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en_GB'
    app.redis.host: 'redis'
    app.redis.port: '6379'
    app.aws.s3.version: 'latest'
    app.aws.s3.region: 'ap-southeast-2'
    app.google.auth: '%kernel.project_dir%/auth/auth.json'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    Twig\Extension\StringLoaderExtension:

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    App\Repository\:
        resource: '../src/Repository'
        autowire: true
        tags: ['doctrine.repository_service']

    App\Component\AwsS3Client:
        class: App\Component\AwsS3Client
        public: true
        arguments:
            $version: '%app.aws.s3.version%'
            $region: '%app.aws.s3.region%'
            $bucket: '%app.aws.s3.bucket%'
            $imageCdn: '%app.aws.imagecdn%'
            $cacheHandler: '@app.redis'

    app.aws.s3:
        alias: App\Component\AwsS3Client
        public: true

    App\Component\Redis:
        class: App\Component\Redis
        public: true
        arguments:
            $redisHost: '%app.redis.host%'
            $redisPort: '%app.redis.port%'

    app.redis:
        alias: App\Component\Redis
        public: true


    App\Security\LogoutSuccessHandler:
        class: App\Security\LogoutSuccessHandler
        public: true
        arguments:
          ['@app.redis']

    app.user:
        alias: App\Security\SocialUser
        public: true

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\DataCollector\AwsS3Collector:
        tags:
            -
                name:     data_collector
                template: 'data_collector/aws_s3.html.twig'
                # must match the value returned by the getName() method
                id:       'app.aws_s3_collector'
                # optional priority
                # priority: 300
        public: true

    App\DataCollector\RedisCollector:
        tags:
            -
                name:     data_collector
                template: 'data_collector/redis.html.twig'
                # must match the value returned by the getName() method
                id:       'app.redis_collector'
                # optional priority
                # priority: 300
        public: true


    Symfony\Component\Security\Core\User\UserInterface: '@app.user'
