# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    App\Repository\:
        resource: '../src/Repository'
        autowire: true
        tags: ['doctrine.repository_service']

    app.aws.s3:
        class: App\Utils\AwsS3Client
        public: true
        arguments:
            $version: '%env(AWS_S3_VERSION)%'
            $region: '%env(AWS_S3_REGION)%'
            $bucket: '%env(AWS_S3_BUCKET)%'
            $imageCdn: '%env(IMAGE_CDN)%'
            $cacheHandler: '@app.redis'

    app.redis:
        class: App\Utils\Redis
        public: true
        arguments:
            $redisHost: '%env(REDIS_HOST)%'
            $redisPort: '%env(REDIS_PORT)%'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
