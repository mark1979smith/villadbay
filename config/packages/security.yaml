security:
    # https://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        webservice:
            id: App\Security\User\WebserviceUserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/login
            anonymous: ~
        admin_login:
            pattern: ^/admin/login
            anonymous: ~
        admin:
            pattern: ^/admin
            form_login:
                login_path: /admin/login
                check_path: /admin/login_check
        development:
            host: ^dev\.villadbay\.com$
            form_login: ~
        staging:
            host: ^staging\.villadbay\.com$
            http_basic: ~
        preprod:
            host: ^preprod\.villadbay\.com$
            http_basic: ~
        main:
            anonymous: ~

            # activate different ways to authenticate

            # http_basic: ~
            # https://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # https://symfony.com/doc/current/cookbook/security/form_login_setup.html
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
    access_control:
        # require ROLE_SUPERADMIN for dev domain
        - { path: ^/admin, roles: ROLE_SUPERADMIN, host: ^dev\.villadbay\.com$}
        # require ROLE_ADMIN for dev domain
        - { path: ^/, roles: ROLE_ADMIN, host: ^staging\.villadbay\.com$}
        - { path: ^/, roles: ROLE_ADMIN, host: ^preprod\.villadbay\.com$}
        # require ROLE_ADMIN for /admin*
        - { path: ^/admin, roles: ROLE_ADMIN }

    role_hierarchy:
        ROLE_USER: ROLE_GUEST
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPERADMIN: ROLE_ADMIN

